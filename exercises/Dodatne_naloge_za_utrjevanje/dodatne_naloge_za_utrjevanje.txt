1. Napišite zaporedje ukazov v zbirniku za procesor ARM, ki 32-bitno spremenljivko STEV1 poveča za 5-krat brez uporabe ukaza za množenje. Nalogo rešite s posrednim naslavljanjem brez odmika preko registra R0.

NAMIG: število množite s 5 tako, da ga 5-krat seštejete.

          .text
   
STEV1:    .word 0x1


          .global __start
__start:
          adr r0,STEV1   @Nalozimo naslov STEV1 v regiser R0
          ldr r1,[r0]    @Nalozimo vrednost(kamor kaze r0) v r1
          ldr r2,[r0]
          add r2,r2,r1   @povecamo za enkrat
          add r2,r2,r1
          add r2,r2,r1
          add r2,r2,r1
          add r2,r2,r1

__end:    b __end   


2. Rezervirajte prostor za tabelo z oznako TABELA, v kateri je prostora za 4 32-bitne vrednosti. Nato v te 4 operande zapišite njihove pomnilniške naslove.  Nalogo rešite s posrednim naslavljanjem s takojšnjim odmikom preko registra R0.

          .text
   
TABELA:   .space 16      @rezerviramo 16 bajtov

          .global __start
__start:
          adr r0,TABELA  @nalozimo naslov tabele
          str r0,[r0]    @shranimo naslov tabele na naslov tabele
          add r0,r0,#4   @povecamo naslov za 4
          str r0,[r0]
          add r0,r0,#4
          str r0,[r0]
          add r0,r0,#4
          str r0,[r0]
         


__end:    b __end   


3. Napišite zaporedje ukazov v zbirniku za procesor ARM, ki sešteje 5 16-bitnih vrednosti: »1,2,3,4,5«, ki so definirana z oznako TABLE, rezultat pa shrani v 32-bitno spremenljivko SUM.  Nalogo rešite s posrednim naslavljanjem s takojšnjim odmikom preko registra R0.


          .text
TABLE:    .hword  1,2,3,4,5
          .align
SUM:      .word
          .global __start
__start:
          adr r0,TABLE    @v r0 prenesemo lokacijo tabele
          ldrh r1,[r0]    @v r1 prenesemo vrednost 1. indexa
          add r2,r2,r1    @r2 pristejemo vrednost r1
          ldrh r1,[r0,#2]     
          add r2,r2,r1
          ldrh r1,[r0,#4]     
          add r2,r2,r1
          ldrh r1,[r0,#6]     
          add r2,r2,r1
          ldrh r1,[r0,#8]     
          add r2,r2,r1
          
          str r2, SUM
         


__end:    b __end   
