1. Napišite zaporedje ukazov v zbirniku za procesor ARM, ki izračuna izraz STEV1 = MAKS(STEV2, STEV3). Vse spremenljivke so 32-bitne in nepredznačene. Program preizkusite z različnimi vrednostmi STEV2 in STEV3. Uporabite pogojni skok. Program naj bo naslednje oblike:
STEV1 = STEV2
IF STEV2 > STEV3 THEN GOTO DALJE
STEV1 = STEV3
DALJE: …


          .text
stev1:    .space 4
stev2:    .word 0x15
stev3:    .word 0x10

          .global __start

__start:
          adr r0, stev2
          ldr r2, [r0]
          
          adr r0, stev3
          ldr r3, [r0]
          
          mov r1, r2
          cmp r2, r3
          bhi dalje
          mov r1, r3
dalje:    
          adr r0, stev1 
          str r1, [r0]


2. Program iz prejšnje naloge predelajte tako, da bo ustrezal izrazu STEV1 = MIN(STEV2, STEV3).

           .text
stev1:    .space 4
stev2:    .word 0x15
stev3:    .word 0x10

          .global __start

__start:
          adr r0, stev2
          ldr r2, [r0]
          
          adr r0, stev3
          ldr r3, [r0]
          
          mov r1, r2
          cmp r2, r3
          blo dalje
          mov r1, r3
dalje:    
          adr r0, stev1 
          str r1, [r0]


3. Programa iz dveh prejšnjih nalog predelajte tako, da bosta iskala večje oziroma manjše število izmed dveh predznačenih spremenljivk. Programa preizkusite tudi s števili 1 in -1.

----------------------------a-------------------------
          .text
stev1:    .space 4
stev2:    .word -1
stev3:    .word 1

          .global __start

__start:
          adr r0, stev2
          ldr r2, [r0]
          
          adr r0, stev3
          ldr r3, [r0]
          
          mov r1, r2
          cmp r2, r3
          bgt dalje
          mov r1, r3
dalje:    
          adr r0, stev1 
          str r1, [r0]

----------------------------b-------------------------

          .text
stev1:    .space 4
stev2:    .word -1
stev3:    .word 1

          .global __start

__start:
          adr r0, stev2
          ldr r2, [r0]
          
          adr r0, stev3
          ldr r3, [r0]
          
          mov r1, r2
          cmp r2, r3
          blt dalje
          mov r1, r3
dalje:    
          adr r0, stev1 
          str r1, [r0]


4. Napišite program za iskanje največjega skupnega delitelja dveh nepredznačenih števil s pomočjo Evklidovega algoritma. Uporabite pogojne skoke. Program naj bo oblike:

ZANKA: IF r1<r2 THEN GOTO L1
            IF r1=r2 THEN GOTO L2
            r1=r1-r2
            GOTO ZANKA
L1:        r2=r2-r1
              GOTO ZANKA
L2:          … @ najvecji skupni delitelj je v r1 in v r2



          .text
stev1:    .space 4
stev2:    .word 105
stev3:    .word 45

          .global __start

__start:
          adr r0, stev2
          ldr r1, [r0]
                
          adr r0, stev3
          ldr r2, [r0]
          
zanka:    cmp r1, r2
          blo l1
          beq l2
          sub r1, r1, r2
          b   zanka
l1:       sub r2,r2,r1
          b   zanka
l2:       @najvecji skupni delitelj je v r1 in v r2 